{
    "portfolio/public/index.html": "File Summary: index.html\n\nModule Overview:\n\n  Purpose: This HTML file serves as the main entry point for the web application. It defines the structure and content of the initial webpage that users will see.\n  \n  Dependencies: \n  - None\n\nClasses:\n  - N/A\n\nFunctions:\n  - N/A\n\nThis file contains the necessary HTML markup to create a basic webpage. It includes links to external resources such as fonts, icons, and manifest files. The title of the webpage is set to \"Shakhram\" and it includes a div element with the id \"root\" where the React application will be rendered. The file also provides instructions for development and production builds using npm or yarn.",
    "portfolio/src/App.css": "Page Title: App.css\n\nModule Overview:\n\n  Purpose: This module contains the styling rules for the main application layout, including the header, logo, and links.\n  Dependencies: None\n\nClasses:\n\n  .App:\n  - Purpose: Represents the main container of the application.\n  - Attributes:\n    - text-align: center\n  - Methods: None\n\n  .App-logo:\n  - Purpose: Represents the logo of the application.\n  - Attributes:\n    - height: 40vmin\n    - pointer-events: none\n  - Methods: None\n\n  .App-header:\n  - Purpose: Represents the header section of the application.\n  - Attributes:\n    - background-color: #282c34\n    - min-height: 100vh\n    - display: flex\n    - flex-direction: column\n    - align-items: center\n    - justify-content: center\n    - font-size: calc(10px + 2vmin)\n    - color: white\n  - Methods: None\n\n  .App-link:\n  - Purpose: Represents the links within the application.\n  - Attributes:\n    - color: #61dafb\n  - Methods: None\n\n  @keyframes App-logo-spin:\n  - Purpose: Defines a keyframe animation for spinning the logo.\n  - Attributes:\n    - from: transform: rotate(0deg)\n    - to: transform: rotate(360deg)\n  - Methods: None\n\nFunctions: None\n\nOverall, the App.css file contains styling rules for the main components of the application, such as the container, logo, header, and links. The file also includes a keyframe animation for spinning the logo.",
    "portfolio/src/App.js": "Page Title: App.js\n\nModule Overview:\n\n  Purpose: This module serves as the main entry point for the React application. It sets up the routing for different pages within the application and renders the Navbar component along with the corresponding components for each route.\n\n  Dependencies: \n  - React: The core library for building user interfaces in React.\n  - react-router-dom: Library for handling routing in React applications.\n  - Navbar: Component for displaying the navigation bar.\n  - Home, About, Resume, Projects, Contact: Components for displaying different pages of the application.\n  - App.css: Stylesheet for styling the components in the application.\n\nFunctions:\n\n  App():\n  - Purpose: Renders the main structure of the application, including the Navbar and routes for different pages.\n  - Arguments: None\n  - Returns: JSX element representing the structure of the application.\n  - Exceptions: None\n\nRoutes:\n  - Purpose: Defines the routes for different pages in the application.\n  - Attributes: \n    - exact path: The URL path for the route.\n    - element: The component to be rendered when the route is matched.\n\nNavbar:\n  - Purpose: Displays the navigation bar at the top of the application.\n  - Attributes: None\n  - Methods: None\n\nHome, About, Resume, Projects, Contact:\n  - Purpose: Components for displaying the respective pages in the application.\n  - Attributes: None\n  - Methods: None\n\nOverall, App.js is a crucial file in the React application as it sets up the main structure and routing for the application, allowing users to navigate between different pages seamlessly.",
    "portfolio/src/App.test.js": "File Summary: App.test.js\n\nModule Overview:\n\n  Purpose: This module contains a test case for rendering a specific component in the application and checking if a certain element is present on the screen.\n  Dependencies: \n  - @testing-library/react: Library for testing React components.\n\nFunctions:\n\n  test('renders learn react link', () =>):\n  - Purpose: Tests if the App component renders a link with the text \"learn react\" and if it is present on the screen.\n  - Arguments: None\n  - Returns: None\n  - Exceptions: None\n\nClasses: None",
    "portfolio/src/components/About.js": "Module Overview:\n\nPurpose: The About.js module provides the About Me section of the application, displaying information about the developer, their hobbies, languages/frameworks, and technologies used.\n\nDependencies:\n- React: A JavaScript library for building user interfaces.\n- Various image files for logos and technology images.\n- \"../styles/About.css\": CSS file for styling the About Me section.\n\nFunctions:\n- About: Renders the main content of the About Me section.\n  - Purpose: Displays information about the developer, their hobbies, languages/frameworks, and technologies.\n  - Arguments: None\n  - Returns: JSX elements representing the About Me section.\n  - Exceptions: None\n\nClasses: None\n\nOverall, the About.js file is responsible for rendering the About Me section of the application, providing details about the developer and the technologies used in the project.",
    "portfolio/src/components/Contact.js": "Module Overview:\n\nPurpose: The Contact module handles the functionality for users to send messages through a contact form and provides links to the developer's social media profiles.\n\nDependencies:\n- React: A JavaScript library for building user interfaces.\n- Fetch API: A modern interface for fetching resources asynchronously across the network.\n\nFunctions:\n\nhandleSubmit:\n- Purpose: Handles the form submission by sending the user's message to the backend server.\n- Arguments: e (event): The form submission event.\n- Returns: None\n- Exceptions: None\n\nresetForm:\n- Purpose: Resets the form fields to empty values.\n- Arguments: None\n- Returns: None\n- Exceptions: None\n\nhandleChange:\n- Purpose: Updates the form data based on user input.\n- Arguments: e (event): The input change event.\n- Returns: None\n- Exceptions: None\n\nAttributes:\n- formData (object): An object containing the user's name, email, and message.\n- name (string): The user's name.\n- email (string): The user's email address.\n- message (string): The user's message.\n\nClasses: None\n\nOverall, the Contact module allows users to send messages through a form, handles form submission, and provides links to the developer's social media profiles.",
    "portfolio/src/components/Home.js": "Page Title: Home.js\n\nModule Overview:\n\n  Purpose: The Home module is responsible for rendering the home page of the application. It displays a dynamic introduction with changing job titles, a brief description, a video with clickable hotspots, and personal links to GitHub and LinkedIn profiles.\n\n  Dependencies: \n  - react: A JavaScript library for building user interfaces.\n  - react-router-dom: A routing library for React applications.\n  - images: Image files used for logos and icons.\n  - styles/Home.css: CSS file for styling the home page.\n\nClasses:\nNone\n\nFunctions:\nNone\n\nIf you are documenting a file without classes or functions, provide a brief overview of the file's purpose and contents.",
    "portfolio/src/components/Navbar.js": "Page Title: Navbar.js\n\nModule Overview:\n\n  Purpose: The Navbar module provides the navigation bar component for the application, allowing users to easily navigate between different pages.\n  \n  Dependencies: \n  - react: The React library for building user interfaces.\n  - react-router-dom: The library for handling routing in React applications.\n\nClasses:\n- There are no classes defined in this module.\n\nFunctions:\n\n  toggleDropdown():\n  - Purpose: Toggles the visibility of the dropdown menu in the navigation bar.\n  - Arguments: None\n  - Returns: None\n  - Exceptions: None\n\n  useEffect():\n  - Purpose: A React hook that runs the specified effect function when the component mounts and whenever the window is resized.\n  - Arguments: \n    - Callback function: The function to be executed when the effect runs.\n  - Returns: None\n  - Exceptions: None\n\n  useState():\n  - Purpose: A React hook that allows the component to hold and update state.\n  - Arguments: \n    - Initial state value: The initial value of the state.\n  - Returns: An array containing the current state value and a function to update it.\n  - Exceptions: None\n\nFile Overview:\nThe Navbar.js file contains the Navbar component, which includes a logo, navigation links, and a dropdown menu for smaller screens. The component adjusts its layout based on the window width, displaying a condensed version of the navigation bar when the screen size is below 768 pixels. The component also includes functionality to toggle the dropdown menu and navigate to different pages within the application.",
    "portfolio/src/components/Projects.js": "Module Overview:\n\nPurpose: The Projects module is responsible for displaying information about two projects, Drop-In and Raiment, including project descriptions, technologies used, and links to their respective GitHub repositories.\n\nDependencies:\n- dropInPreview: Image file for the Drop-In project preview.\n- raimentPreview: Image file for the Raiment project preview.\n- Projects.css: Stylesheet for the Projects component.\n\nClasses:\n- N/A\n\nFunctions:\n- Projects:\n  - Purpose: Renders the Projects component with information about the Drop-In and Raiment projects.\n  - Arguments: None\n  - Returns: JSX element containing project information.\n  - Exceptions: None",
    "portfolio/src/components/Resume.js": "Module Overview:\n\nPurpose: The Resume.js file is responsible for rendering a resume component that displays a list of experiences, including job positions, dates, descriptions, and technologies used.\n\nDependencies: This file does not have any external dependencies.\n\nFunctions:\n\n- Resume:\n  - Purpose: Renders a resume component with a list of experiences.\n  - Arguments: None\n  - Returns: JSX element representing the resume component\n  - Exceptions: None\n\nClasses: None\n\nOverall, the Resume.js file serves as a component to display a structured list of experiences, including job details and technologies used, in a resume format.",
    "portfolio/src/index.css": "File Summary: styles.css\n\nModule Overview:\n\n  Purpose: This file contains the styling rules for the application's user interface, ensuring a consistent and visually appealing design.\n\n  Dependencies: \n  - None\n\nContent Overview:\n\nThis file includes CSS rules and selectors to style the application's elements, such as fonts, margins, and text formatting. The file sets the default font family for the application, as well as the font smoothing properties for better readability on different devices. Additionally, it defines the font family for code snippets to ensure code readability within the application.",
    "portfolio/src/index.js": "File Summary: index.js\n\nModule Overview:\n\n  Purpose: This file serves as the entry point for the React application. It renders the main App component within the root element of the HTML document.\n  \n  Dependencies: \n  - React: A JavaScript library for building user interfaces.\n  - ReactDOM: A package that provides DOM-specific methods for React components.\n  - index.css: A CSS file for styling the application.\n  - App: The main component of the application.\n  - reportWebVitals: A function for measuring the performance of the app.\n\nClasses:\nN/A\n\nFunctions:\nN/A\n\nOverall, this file initializes the React application by rendering the main App component within a root element, and includes functionality for measuring the app's performance.",
    "portfolio/src/reportWebVitals.js": "File Summary: reportWebVitals.js\n\nModule Overview:\n\n  Purpose: This module is responsible for reporting web vital metrics such as Cumulative Layout Shift (CLS), First Input Delay (FID), First Contentful Paint (FCP), Largest Contentful Paint (LCP), and Time to First Byte (TTFB) to a provided callback function.\n  \n  Dependencies: \n  - web-vitals: Library for measuring web vitals metrics.\n\nFunctions:\n\n  reportWebVitals(onPerfEntry: Function) -> void:\n  - Purpose: Reports web vital metrics to the provided callback function.\n  - Arguments:\n    - onPerfEntry (Function): The callback function to report the metrics to.\n  - Returns:\n    - void\n  - Exceptions:\n    - None",
    "portfolio/src/setupTests.js": "File Summary: jest-dom.js\n\nModule Overview:\n\n  Purpose: This module adds custom Jest matchers for asserting on DOM nodes, allowing developers to easily test DOM-related functionalities in their code.\n  Dependencies: \n  - @testing-library/jest-dom: The library providing custom Jest matchers for DOM testing.\n\nFunctions:\n- N/A\n\nClasses:\n- N/A\n\nOverall, the jest-dom.js file enhances the testing capabilities of developers by providing custom matchers for DOM testing in Jest.",
    "portfolio/src/styles/About.css": "Page Title: main.css\n\nModule Overview:\n\n  Purpose: This CSS file defines the styling for the main content section of the application, including the layout and appearance of various elements such as sections and images.\n\n  Dependencies: \n  - No external dependencies.\n\nClasses:\n\n  No classes defined in this CSS file.\n\nFunctions:\n\n  No functions defined in this CSS file.\n\nFile Overview:\n\n  This CSS file contains styling rules for the main content section of the application. It includes rules for displaying content in a column layout, enabling smooth vertical scrolling, and aligning sections within the viewport. Additionally, it defines styles for the \"about me\" section, including text alignment, image sizing, and padding.",
    "portfolio/src/styles/Contact.css": "Module Overview:\n\nPurpose: The .contact-form file defines the styling for a contact form component within the application.\n\nDependencies: This file does not have any external dependencies.\n\nClasses:\n\n- .contact-form:\n  - Purpose: Represents the styling for the contact form component.\n  - Attributes:\n    - display: flex;\n    - flex-direction: column;\n    - align-items: center;\n    - margin: 0 auto;\n    - margin-bottom: 50px;\n  - Methods: N/A\n\n- .contact-form input, .contact-form textarea:\n  - Purpose: Represents the styling for input and textarea elements within the contact form.\n  - Attributes:\n    - margin-bottom: 20px;\n    - width: 300px;\n    - border-radius: 15px;\n    - border-style: none;\n    - font-size: 16px;\n    - padding: 10px;\n  - Methods: N/A\n\n- .contact-form .name, .contact-form .email:\n  - Purpose: Represents the styling for the name and email input fields within the contact form.\n  - Attributes:\n    - min-height: 40px;\n  - Methods: N/A\n\n- .contact-form .message:\n  - Purpose: Represents the styling for the message textarea within the contact form.\n  - Attributes:\n    - min-height: 100px;\n    - flex-wrap: wrap;\n    - word-break: break-word;\n    - overflow: scroll;\n  - Methods: N/A\n\n- .contact-form .submit-button:\n  - Purpose: Represents the styling for the submit button within the contact form.\n  - Attributes:\n    - color: rgb(0, 0, 0);\n    - width: 300px;\n    - height: 50px;\n    - font-size: 16px;\n    - border-radius: 15px;\n    - cursor: pointer;\n    - border-style: none;\n  - Methods: N/A\n\nFunctions: N/A\n\nThis summary provides an overview of the styling rules defined in the .contact-form file, which are used to style the contact form component in the application.",
    "portfolio/src/styles/Home.css": "File Summary: styles.css\n\nModule Overview:\n\n  Purpose: This file contains the styling rules for the user interface of the application. It defines the layout, colors, fonts, and animations used throughout the application.\n\n  Dependencies: \n  - No external dependencies.\n\nCSS Rules:\n\n- body: Sets the padding and margin of the body element.\n- .cursor-blink: Defines an animation for a blinking cursor.\n- .hello: Styles for a greeting message.\n- .job-titles: Styles for job titles.\n- .intro-container: Styles for the introduction container.\n- .intro: Styles for the introduction text.\n- .personal-links: Styles for personal links.\n- .video-and-table-container: Styles for the video and table container.\n- video: Styles for video elements.\n- table: Styles for table elements.\n- td: Styles for table data cells.\n- .about-me-td, .resume-td, .projects-td: Styles for specific table data cells.\n- Media queries for responsive design.\n\nThis file is responsible for defining the visual appearance of the application and ensuring a consistent user experience across different devices.",
    "portfolio/src/styles/Navbar.css": "File Summary: styles.css\n\nModule Overview:\n\n  Purpose: This file contains the styling rules for the navigation bar of the application.\n  Dependencies: No external dependencies.\n\nClasses: N/A\n\nFunctions: N/A\n\nCSS Rules:\n- .navbar: Defines the styling for the navigation bar, including positioning, background color, and layout.\n- .navbar a: Styles the anchor tags within the navigation bar.\n- .navbar-links: Styles the links within the navigation bar.\n- .logo: Styles the logo element within the navigation bar.\n- .accordian-menu: Styles the accordion menu within the navigation bar.\n- nav ul: Styles the unordered list within the navigation bar.\n- nav li: Styles the list items within the navigation bar.\n\nMedia Queries:\n- @media (max-width: 768px): Adjusts the styling of the logo element for smaller screens.\n\nOverall, this file is responsible for defining the visual appearance and layout of the navigation bar component in the application.",
    "portfolio/src/styles/Projects.css": "Page Title: styles.css\n\nModule Overview:\n\n  Purpose: This file contains styling rules for the projects section of the application. It defines the layout and appearance of project images and descriptions.\n\n  Dependencies: \n  - None\n\nClasses:\n- None\n\nFunctions:\n- None\n\nFile Contents Overview:\nThe styles.css file is responsible for styling the projects section of the application. It sets the maximum width of the projects container, centers it on the page, and adds spacing between projects. It also defines the layout of project images and descriptions, ensuring they are displayed side by side on larger screens and stacked on smaller screens. The file includes rules for image sizes, border radius, text alignment, and responsive design for different screen sizes.",
    "portfolio/src/styles/Resume.css": "File: resume.css\n\nModule Overview:\n\n  Purpose: This file contains the styling rules for a resume template, defining the layout and design of the resume page.\n  Dependencies: None\n\nClasses: None\n\nFunctions: None\n\nThis file primarily focuses on styling elements such as headings, lists, job experiences, dates, descriptions, and technologies used in a resume. It sets the layout, alignment, and visual presentation of the resume content to ensure a professional and organized appearance. The file utilizes CSS properties like text-align, max-width, margin, padding, display, flex, list-style, background-color, color, border-radius, and flex-wrap to achieve the desired design. Developers can refer to this file to understand and modify the visual aspects of the resume template."
}