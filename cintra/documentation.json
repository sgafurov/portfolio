{
    "portfolio/public/index.html": "File Summary: index.html\n\nModule Overview:\n\n  Purpose: This HTML file serves as the main entry point for the web application. It defines the structure and content of the initial webpage that users will see when accessing the application.\n\n  Dependencies: \n  - Google Fonts API: Used to import the Montserrat font for styling the webpage.\n  - manifest.json: Provides metadata for the web app when installed on a mobile device or desktop.\n\nClasses: N/A\n\nFunctions: N/A\n\nThis file includes essential HTML elements such as the <head> section for defining metadata, links to external resources like fonts, and the <body> section where the content of the webpage is displayed. It also includes comments guiding developers on how to start the development process and build the production bundle.",
    "portfolio/src/App.css": "Page Title: App.css\n\nModule Overview:\n\n  Purpose: This module contains the styling rules for the main application layout, including the header, logo, and links.\n  Dependencies: None\n\nClasses:\n\n  .App:\n  - Purpose: Represents the main container of the application.\n  - Attributes:\n    - text-align: center\n  - Methods: None\n\n  .App-logo:\n  - Purpose: Represents the logo of the application.\n  - Attributes:\n    - height: 40vmin\n    - pointer-events: none\n  - Methods: None\n\n  .App-header:\n  - Purpose: Represents the header section of the application.\n  - Attributes:\n    - background-color: #282c34\n    - min-height: 100vh\n    - display: flex\n    - flex-direction: column\n    - align-items: center\n    - justify-content: center\n    - font-size: calc(10px + 2vmin)\n    - color: white\n  - Methods: None\n\n  .App-link:\n  - Purpose: Represents the links within the application.\n  - Attributes:\n    - color: #61dafb\n  - Methods: None\n\n  @keyframes App-logo-spin:\n  - Purpose: Defines the animation for spinning the logo.\n  - Attributes:\n    - from: transform: rotate(0deg)\n    - to: transform: rotate(360deg)\n  - Methods: None\n\nFunctions: None\n\nOverall, this file contains the styling rules for the main components of the application, such as the header, logo, and links. The classes define the visual appearance and layout of these elements, while the keyframes define an animation for the logo spinning.",
    "portfolio/src/App.js": "Page Title: App.js\n\nModule Overview:\n\n  Purpose: This module serves as the main entry point for the React application. It sets up the routing for different pages within the application and renders the Navbar component along with the corresponding components for each route.\n\n  Dependencies: \n  - React: The core library for building user interfaces in React.\n  - react-router-dom: Library for handling routing in React applications.\n  - Navbar: Component for displaying the navigation bar.\n  - Home, About, Resume, Projects, Contact: Components for displaying different pages of the application.\n\nFunctions:\n\n  App():\n  - Purpose: Renders the main structure of the application, including the Navbar and routes for different pages.\n  - Arguments: None\n  - Returns: JSX element representing the entire application structure.\n  - Exceptions: None\n\nRoutes:\n  - Purpose: Defines the routes for different pages in the application.\n  - Attributes: \n    - exact path: The URL path for the route.\n    - element: The component to be rendered when the route is matched.\n\nNavbar:\n  - Purpose: Displays the navigation bar at the top of the application.\n  - Attributes: None\n  - Methods: None\n\nHome, About, Resume, Projects, Contact:\n  - Purpose: Display the content for the corresponding pages in the application.\n  - Attributes: None\n  - Methods: None\n\nOverall, App.js is a crucial file in the React application as it sets up the main structure and routing for the entire application, allowing users to navigate between different pages seamlessly.",
    "portfolio/src/App.test.js": "File Summary: App.test.js\n\nModule Overview:\n\n  Purpose: This module contains a test case for rendering a specific component in the application and checking if a certain element is present on the screen.\n  Dependencies: \n  - @testing-library/react: Library for testing React components.\n\nFunctions:\n\n  test('renders learn react link', () =>):\n  - Purpose: This function tests if the 'learn react' link is rendered on the screen when the App component is rendered.\n  - Arguments: None\n  - Returns: None\n  - Exceptions: None\n\nClasses: None",
    "portfolio/src/components/About.js": "Module Overview:\n\nPurpose: The About component is responsible for rendering information about the developer, including personal details, hobbies, languages/frameworks used, and technologies employed in the project.\n\nDependencies:\n- AboutNav: A component for navigating within the About section.\n- React: A JavaScript library for building user interfaces.\n\nFunctions:\n- About: Renders the developer's personal information, hobbies, languages/frameworks, and technologies used in the project.\n\nClasses:\nNone\n\nOverall, the About component serves as a central hub for displaying essential information about the developer and the technologies utilized in the project.",
    "portfolio/src/components/AboutNav.js": "Module Overview:\n\n  Purpose: The AboutNav module provides a navigation component for the About page of the application. It displays a fixed sidebar with links to different sections of the About page.\n\n  Dependencies: \n  - React: The React library for building user interfaces.\n\nFunctions:\n  None\n\nClasses:\n  AboutNav:\n  - Purpose: Represents the About navigation component.\n  - Attributes:\n    - None\n  - Methods:\n    - None\n\nOverall, the AboutNav file contains a functional component that renders a fixed sidebar navigation menu for the About page. It uses React to create the user interface elements and styling.",
    "portfolio/src/components/Contact.js": "Module Overview:\n\nPurpose: The Contact module handles the functionality for users to send messages through a contact form and provides links to the developer's social media profiles.\n\nDependencies:\n- React: A JavaScript library for building user interfaces.\n- Fetch API: A modern interface for fetching resources asynchronously across the network.\n\nFunctions:\n\nhandleSubmit(e: Event) -> void:\n- Purpose: Handles the form submission by sending the user's message to the backend server.\n- Arguments:\n  - e (Event): The form submission event.\n- Returns: void\n- Exceptions: None\n\nresetForm() -> void:\n- Purpose: Resets the form fields to their initial state.\n- Arguments: None\n- Returns: void\n- Exceptions: None\n\nhandleChange(e: Event) -> void:\n- Purpose: Updates the form data based on user input.\n- Arguments:\n  - e (Event): The input change event.\n- Returns: void\n- Exceptions: None\n\nAttributes:\n- formData (object): An object containing the user's name, email, and message.\n- name (string): The user's name.\n- email (string): The user's email address.\n- message (string): The user's message.\n\nClasses: None\n\nOverall, the Contact module allows users to send messages through a form and provides links to the developer's social media profiles. It utilizes React for building the user interface and the Fetch API for sending data to the backend server.",
    "portfolio/src/components/Home.js": "Page Title: Home.js\n\nModule Overview:\n\n  Purpose: The Home.js module is responsible for rendering the home page of the application. It displays a dynamic introduction with changing job titles, a brief description of the user, a video with clickable hotspots, and personal links to GitHub and LinkedIn profiles.\n\n  Dependencies: \n  - react: A JavaScript library for building user interfaces.\n  - react-router-dom: A routing library for React applications.\n  - images: Image files used for logos and icons.\n  - styles/Home.css: CSS file for styling the home page.\n\nClasses:\n- N/A\n\nFunctions:\n- N/A\n\nIf you are documenting a file without classes or functions, provide a brief overview of the file's purpose and contents.",
    "portfolio/src/components/Navbar.js": "Page Title: Navbar.js\n\nModule Overview:\n\n  Purpose: The Navbar module provides the navigation bar component for the application, allowing users to easily navigate between different pages.\n  \n  Dependencies: \n  - react: The React library for building user interfaces.\n  - react-router-dom: The library for handling routing in React applications.\n\nClasses:\n- N/A\n\nFunctions:\n\n  toggleDropdown() -> None:\n  - Purpose: Toggles the visibility of the dropdown menu in the navigation bar.\n  - Arguments: None\n  - Returns: None\n  - Exceptions: None\n\n  useEffect() -> None:\n  - Purpose: Listens for window resize events and adjusts the visibility of the navigation bar based on the window width.\n  - Arguments: None\n  - Returns: None\n  - Exceptions: None\n\n  Navbar() -> JSX Element:\n  - Purpose: Renders the navigation bar component with logo, links, and dropdown menu.\n  - Arguments: None\n  - Returns: JSX Element representing the navigation bar component.\n  - Exceptions: None\n\nOverall, the Navbar module is responsible for rendering the navigation bar component with dynamic behavior based on the window width and user interactions. It utilizes React hooks like useState and useEffect to manage component state and side effects. The module also depends on the React and react-router-dom libraries for building user interfaces and handling routing within the application.",
    "portfolio/src/components/Projects.js": "Module Overview:\n\nPurpose: The Projects module is responsible for displaying information about two projects, Drop-In and Raiment, including project descriptions, technologies used, and links to their respective GitHub repositories.\n\nDependencies:\n- dropInPreview: Image file for the Drop-In project preview.\n- raimentPreview: Image file for the Raiment project preview.\n- Projects.css: Stylesheet for the Projects component.\n\nClasses:\n- N/A\n\nFunctions:\n- N/A\n\nOverall, the Projects module serves as a showcase for the Drop-In and Raiment projects, providing users with a brief overview of each project, the technologies used, and links to their GitHub repositories.",
    "portfolio/src/components/Resume.js": "Module Overview:\n\nPurpose: The Resume.js file is responsible for rendering a resume component that displays a list of experiences, including job positions, dates, descriptions, and technologies used.\n\nDependencies: This file does not have any external dependencies.\n\nFunctions:\n\n- Resume:\n  - Purpose: Renders a resume component with a list of experiences.\n  - Arguments: None\n  - Returns: JSX element representing the resume component\n  - Exceptions: None\n\nClasses: None\n\nOverall, the Resume.js file serves as a component to display a structured list of experiences, including job details and technologies used, in a resume format.",
    "portfolio/src/index.css": "File Summary: styles.css\n\nModule Overview:\n\n  Purpose: This file contains the styling rules for the application's user interface, ensuring a consistent and visually appealing design.\n\n  Dependencies: \n  - None\n\nContent Overview:\n\nThis file includes CSS rules and selectors to style the application's elements, such as setting margins, font families, and text smoothing properties. The 'body' element is styled to have a margin of 0 and use a specific font family for better readability. The 'code' element is styled to use a monospace font for code snippets, ensuring code readability and consistency across the application. The 'font-smoothing' properties are set to improve text rendering on different platforms.",
    "portfolio/src/index.js": "Module Overview:\n\n  Purpose: This file serves as the entry point for the React application. It initializes the root element, renders the main App component within a React StrictMode, and includes a function to measure performance metrics.\n\n  Dependencies: \n  - React: A JavaScript library for building user interfaces.\n  - ReactDOM: A package that provides DOM-specific methods for React components.\n  - index.css: A CSS file for styling the application.\n  - App: The main component of the application.\n  - reportWebVitals: A function for measuring and reporting performance metrics.\n\nFunctions:\n\n  None\n\nClasses:\n\n  None\n\nOverall, this file sets up the React application by rendering the main App component within a strict mode, and includes functionality for measuring performance metrics.",
    "portfolio/src/reportWebVitals.js": "File Summary: reportWebVitals.js\n\nModule Overview:\n\n  Purpose: This module is responsible for reporting web vitals performance metrics to a specified callback function.\n  Dependencies: \n  - web-vitals: Library for measuring and reporting web performance metrics.\n\nFunctions:\n\n  reportWebVitals(onPerfEntry: Function) -> None:\n  - Purpose: Reports web vitals performance metrics to the provided callback function.\n  - Arguments:\n    - onPerfEntry (Function): The callback function to receive the performance metrics.\n  - Returns:\n    - None\n  - Exceptions:\n    - None\n\nThis file contains a single function, reportWebVitals, which imports the web-vitals library and measures Core Web Vitals metrics (CLS, FID, FCP, LCP, TTFB) using the provided callback function.",
    "portfolio/src/setupTests.js": "File Summary: jest-dom.js\n\nModule Overview:\n\n  Purpose: This module adds custom Jest matchers for asserting on DOM nodes, allowing developers to easily test DOM-related functionalities in their code.\n  Dependencies: \n  - @testing-library/jest-dom: Library for enhancing Jest testing capabilities.\n\nFunctions:\n- N/A\n\nClasses:\n- N/A\n\nOverall, the jest-dom.js file enhances the testing capabilities of Jest by providing custom matchers for DOM nodes, making it easier for developers to write and run tests related to DOM manipulation in their applications.",
    "portfolio/src/styles/About.css": "Page Title: main.css\n\nModule Overview:\n\n  Purpose: This CSS file defines the styling for the main content section of the application, including the layout and appearance of the about me section.\n  \n  Dependencies: None\n\nClasses:\n\n  N/A\n\nFunctions:\n\n  N/A\n\nFile Overview:\n\nThis CSS file contains styling rules for the main content section of the application. It includes rules for displaying content in a column layout, enabling smooth vertical scrolling, and aligning sections within the viewport. Additionally, it defines styles for the about me section, including text alignment, image sizing, and margin settings.",
    "portfolio/src/styles/AboutNav.css": "File Title: AboutNav.css\n\nModule Overview:\n\n  Purpose: This file contains the base styling for the AboutNav component, which is a fixed navigation menu displayed on the right side of the screen.\n  Dependencies: None\n\nClasses:\n\n  AboutNav:\n  - Purpose: Represents the main container for the AboutNav component.\n  - Attributes:\n    - position: fixed\n    - right: 0\n    - top: 0\n    - width: 200px\n    - height: 100%\n    - background-color: #f9f9f9\n    - box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1)\n    - z-index: 1000\n  - Methods: None\n\n  AboutNav ul:\n  - Purpose: Represents the unordered list within the AboutNav component for displaying navigation menu items.\n  - Attributes:\n    - list-style: none\n    - padding: 0\n    - margin: 20px 0\n  - Methods: None\n\n  AboutNav li:\n  - Purpose: Represents each list item within the navigation menu.\n  - Attributes:\n    - padding: 10px 20px\n    - border-bottom: 1px solid #ddd\n  - Methods: None\n\n  AboutNav a:\n  - Purpose: Represents the anchor tag for each navigation menu item.\n  - Attributes:\n    - text-decoration: none\n    - color: #333\n    - display: block\n  - Methods: None\n\nFunctions: None\n\nOverall, this file provides the base styling for the AboutNav component, including the main container, navigation menu items, and active section highlighting. Developers can use these predefined styles to ensure consistency and a visually appealing design for the AboutNav component in the application.",
    "portfolio/src/styles/Contact.css": "Module Overview:\n\nPurpose: The .contact-form file defines the styling for a contact form component within the application.\n\nDependencies: This file does not have any external dependencies.\n\nClasses:\n\n- .contact-form:\n  - Purpose: Represents the styling for the contact form component.\n  - Attributes:\n    - display: flex;\n    - flex-direction: column;\n    - align-items: center;\n    - margin: 0 auto;\n    - margin-bottom: 50px;\n  - Methods: N/A\n\nFunctions: N/A\n\nOverall, the .contact-form file provides the necessary styling rules for the contact form component, ensuring a consistent and visually appealing design for user interaction.",
    "portfolio/src/styles/Home.css": "File Summary: styles.css\n\nModule Overview:\n\n  Purpose: This file contains the styling rules for the user interface of the application. It defines the layout, colors, fonts, and animations used throughout the application.\n\n  Dependencies: \n  - No external dependencies.\n\nCSS Rules:\n\n- body: Sets the padding and margin of the body element.\n- .cursor-blink: Defines an animation for a blinking cursor.\n- .hello: Styles for a greeting message.\n- .job-titles: Styles for job titles.\n- .intro-container: Styles for the introduction container.\n- .intro: Styles for the introduction text.\n- .personal-links: Styles for personal links.\n- .video-and-table-container: Styles for a container with video and table elements.\n- video: Styles for video elements.\n- table: Styles for table elements.\n- td: Styles for table data cells.\n- .about-me-td, .resume-td, .projects-td: Styles for specific table data cells.\n- Media queries for responsive design.\n\nThis file is responsible for defining the visual appearance of the application and ensuring a consistent user experience across different devices.",
    "portfolio/src/styles/Navbar.css": "File Summary: styles.css\n\nModule Overview:\n\n  Purpose: This file contains the styling rules for the navigation bar of the application.\n  Dependencies: No external dependencies.\n\nClasses: N/A\n\nFunctions: N/A\n\nCSS Rules:\n- .navbar: Defines the styling for the navigation bar, including positioning, background color, and layout.\n- .navbar a: Styles the anchor tags within the navigation bar.\n- .navbar-links: Styles the links within the navigation bar.\n- .logo: Styles the logo element within the navigation bar.\n- .accordian-menu: Styles the accordion menu within the navigation bar.\n- nav ul: Styles the unordered list within the navigation bar.\n- nav li: Styles the list items within the navigation bar.\n\nMedia Queries:\n- @media (max-width: 768px): Adjusts the styling of the logo element for smaller screens.\n\nOverall, this file is responsible for defining the visual appearance and layout of the navigation bar component in the application.",
    "portfolio/src/styles/Projects.css": "Page Title: styles.css\n\nModule Overview:\n\n  Purpose: This file contains styling rules for the projects section of the application. It defines the layout and appearance of project images and descriptions.\n\n  Dependencies: \n  - None\n\nClasses:\n- None\n\nFunctions:\n- None\n\nFile Contents Overview:\nThe styles.css file is responsible for styling the projects section of the application. It sets the maximum width of the projects container, centers it on the page, and adds spacing between projects. It also defines the layout of project images and descriptions, ensuring they are displayed side by side on larger screens and stacked on smaller screens. The file includes media queries to adjust the layout for different screen sizes.",
    "portfolio/src/styles/Resume.css": "File: resume.css\n\nModule Overview:\n\n  Purpose: This file contains the styling rules for a resume template, defining the layout and design of the resume page.\n  Dependencies: None\n\nClasses: None\n\nFunctions: None\n\nThis file primarily focuses on styling elements such as headings, lists, job experiences, dates, descriptions, and technologies used in a resume. It sets the layout, alignment, and visual presentation of the resume content to ensure a professional and organized appearance. The file utilizes CSS properties like text-align, max-width, margin, padding, display, flex, list-style, background-color, color, border-radius, and flex-wrap to achieve the desired design. Developers can refer to this file to understand and modify the visual aspects of the resume template."
}